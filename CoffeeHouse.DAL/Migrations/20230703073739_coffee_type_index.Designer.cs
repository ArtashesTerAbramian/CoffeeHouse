// <auto-generated />
using System;
using CoffeeHouse.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CoffeeHouse.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230703073739_coffee_type_index")]
    partial class coffee_type_index
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CoffeeHouse.DAL.Models.Coffee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CoffeeTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("coffee_type_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modify_date");

                    b.HasKey("Id")
                        .HasName("pk_coffee");

                    b.HasIndex("CoffeeTypeId")
                        .HasDatabaseName("ix_coffee_coffee_type_id");

                    b.HasIndex("CreatedDate")
                        .HasDatabaseName("ix_coffee_created_date");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("ix_coffee_is_deleted");

                    b.ToTable("coffee", (string)null);
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.CoffeePhoto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CoffeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("coffee_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("FileUrl")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("file_url");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modify_date");

                    b.HasKey("Id")
                        .HasName("pk_coffee_photo");

                    b.HasIndex("CoffeeId")
                        .HasDatabaseName("ix_coffee_photo_coffee_id");

                    b.HasIndex("CreatedDate")
                        .HasDatabaseName("ix_coffee_photo_created_date");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("ix_coffee_photo_is_deleted");

                    b.ToTable("coffee_photo", (string)null);
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.CoffeeTranslation", b =>
                {
                    b.Property<int>("LanguageId")
                        .HasColumnType("integer")
                        .HasColumnName("language_id");

                    b.Property<long>("CoffeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("coffee_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("description");

                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modify_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("name");

                    b.HasKey("LanguageId", "CoffeeId")
                        .HasName("pk_coffee_translation");

                    b.HasIndex("CoffeeId")
                        .HasDatabaseName("ix_coffee_translation_coffee_id");

                    b.HasIndex("CreatedDate")
                        .HasDatabaseName("ix_coffee_translation_created_date");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("ix_coffee_translation_is_deleted");

                    b.ToTable("coffee_translation", (string)null);
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.CoffeeType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modify_date");

                    b.HasKey("Id")
                        .HasName("pk_coffee_type");

                    b.HasIndex("CreatedDate")
                        .HasDatabaseName("ix_coffee_type_created_date");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("ix_coffee_type_is_deleted");

                    b.ToTable("coffee_type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.CoffeeTypeTranslation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CoffeeTypeId")
                        .HasColumnType("bigint")
                        .HasColumnName("coffee_type_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer")
                        .HasColumnName("language_id");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modify_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_coffee_type_translation");

                    b.HasIndex("CreatedDate")
                        .HasDatabaseName("ix_coffee_type_translation_created_date");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("ix_coffee_type_translation_is_deleted");

                    b.HasIndex("CoffeeTypeId", "LanguageId")
                        .HasDatabaseName("ix_coffee_type_translation_coffee_type_id_language_id");

                    b.ToTable("coffee_type_translation", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CoffeeTypeId = 1L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 1,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Affogato"
                        },
                        new
                        {
                            Id = 2L,
                            CoffeeTypeId = 1L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 2,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Аффогато"
                        },
                        new
                        {
                            Id = 3L,
                            CoffeeTypeId = 1L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 3,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Աֆֆոքատո"
                        },
                        new
                        {
                            Id = 4L,
                            CoffeeTypeId = 2L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 1,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Americano"
                        },
                        new
                        {
                            Id = 5L,
                            CoffeeTypeId = 2L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 2,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Американо"
                        },
                        new
                        {
                            Id = 6L,
                            CoffeeTypeId = 2L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 3,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Ամերիկանո"
                        },
                        new
                        {
                            Id = 7L,
                            CoffeeTypeId = 3L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 1,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Latte"
                        },
                        new
                        {
                            Id = 8L,
                            CoffeeTypeId = 3L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 2,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Латте"
                        },
                        new
                        {
                            Id = 9L,
                            CoffeeTypeId = 3L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 3,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Լատե"
                        },
                        new
                        {
                            Id = 10L,
                            CoffeeTypeId = 4L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 1,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Cappuccino"
                        },
                        new
                        {
                            Id = 11L,
                            CoffeeTypeId = 4L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 2,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Капучино"
                        },
                        new
                        {
                            Id = 12L,
                            CoffeeTypeId = 4L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 3,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Կապուչինո"
                        },
                        new
                        {
                            Id = 13L,
                            CoffeeTypeId = 5L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 1,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Mocha"
                        },
                        new
                        {
                            Id = 14L,
                            CoffeeTypeId = 5L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 2,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Моча"
                        },
                        new
                        {
                            Id = 15L,
                            CoffeeTypeId = 5L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 3,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Մոչա"
                        },
                        new
                        {
                            Id = 16L,
                            CoffeeTypeId = 6L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 1,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Macchiato"
                        },
                        new
                        {
                            Id = 17L,
                            CoffeeTypeId = 6L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 2,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Мачиато"
                        },
                        new
                        {
                            Id = 18L,
                            CoffeeTypeId = 6L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 3,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Մաչիատո"
                        },
                        new
                        {
                            Id = 19L,
                            CoffeeTypeId = 7L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 1,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Espresso"
                        },
                        new
                        {
                            Id = 20L,
                            CoffeeTypeId = 7L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 2,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Еспресо"
                        },
                        new
                        {
                            Id = 21L,
                            CoffeeTypeId = 7L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 3,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Եսպրեսօ"
                        },
                        new
                        {
                            Id = 22L,
                            CoffeeTypeId = 8L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 1,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Decaf"
                        },
                        new
                        {
                            Id = 23L,
                            CoffeeTypeId = 8L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 2,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Декаф"
                        },
                        new
                        {
                            Id = 24L,
                            CoffeeTypeId = 8L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 3,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Դեկաֆ"
                        },
                        new
                        {
                            Id = 25L,
                            CoffeeTypeId = 9L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 1,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Frappuccino"
                        },
                        new
                        {
                            Id = 26L,
                            CoffeeTypeId = 9L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 2,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Фрапучино"
                        },
                        new
                        {
                            Id = 27L,
                            CoffeeTypeId = 9L,
                            CreatedDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            LanguageId = 3,
                            ModifyDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Ֆրապուփչինո"
                        });
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modify_date");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("phone");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("CreatedDate")
                        .HasDatabaseName("ix_users_created_date");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("ix_users_is_deleted");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasDatabaseName("ix_users_user_name");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.UserSession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("boolean")
                        .HasColumnName("is_expired");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modify_date");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("token");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_session");

                    b.HasIndex("CreatedDate")
                        .HasDatabaseName("ix_user_session_created_date");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("ix_user_session_is_deleted");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_user_session_user_id");

                    b.ToTable("user_session", (string)null);
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.Coffee", b =>
                {
                    b.HasOne("CoffeeHouse.DAL.Models.CoffeeType", "CoffeeType")
                        .WithMany()
                        .HasForeignKey("CoffeeTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_coffee_coffee_types_coffee_type_id");

                    b.Navigation("CoffeeType");
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.CoffeePhoto", b =>
                {
                    b.HasOne("CoffeeHouse.DAL.Models.Coffee", "Coffee")
                        .WithMany("Files")
                        .HasForeignKey("CoffeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_coffee_photo_coffee_coffee_id");

                    b.Navigation("Coffee");
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.CoffeeTranslation", b =>
                {
                    b.HasOne("CoffeeHouse.DAL.Models.Coffee", "Coffee")
                        .WithMany("Translations")
                        .HasForeignKey("CoffeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_coffee_translation_coffee_coffee_id");

                    b.Navigation("Coffee");
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.CoffeeTypeTranslation", b =>
                {
                    b.HasOne("CoffeeHouse.DAL.Models.CoffeeType", "CoffeeType")
                        .WithMany("Translations")
                        .HasForeignKey("CoffeeTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_coffee_type_translation_coffee_type_coffee_type_id");

                    b.Navigation("CoffeeType");
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.UserSession", b =>
                {
                    b.HasOne("CoffeeHouse.DAL.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_user_session_users_user_id");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.Coffee", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Translations");
                });

            modelBuilder.Entity("CoffeeHouse.DAL.Models.CoffeeType", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
